name: Sanity check

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  sanity:
    name: Sanity check
    runs-on: ubuntu-latest
    steps:

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Set Go version
        run: |
          echo "::set-env name=GOVERSION::$(cat .go-version)"

      - name: Set up Go
        uses: actions/setup-go@v1
        id: go
        with:
          go-version: "${{env.GOVERSION}}"

      - name: Set up env variables
        run: |
          echo "::set-env name=GOPATH::$(go env GOPATH)"
          echo "::add-path::$(go env GOPATH)/bin"
          echo "$(go env -w GOCACHE=/home/runner/work/scylla-manager/scylla-manager/.cache/go-build/)"
          echo "::set-env name=GOCACHE::$(go env GOCACHE)"
          echo "::set-env name=GOCACHEPATTERN::.cache/go-build/**"
          echo "::set-env name=date::$(date  +'%m-%Y')"

      - name: Restore Module Cache
        uses: actions/cache@preview
        id: cache-go-modules
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-${{ hashFiles('**/go.sum') }}

      - name: Restore Go Test Cache
        uses: actions/cache@preview
        id: cache-go-test
        with:
          path: "${{ env.GOCACHE }}"
          key: ${{ runner.os }}-${{ hashFiles(env.GOCACHEPATTERN) }}-${{ env.date }}

      - name: Restore Go dependencies
        uses: actions/cache@preview
        id: cache-go-deps
        with:
         path: ~/go/bin/
         key: ${{ runner.os }}-${{ hashFiles('**/install_deps.sh') }}

      - name: Install Go dependencies
        if: steps.cache-go-deps.outputs.cache-hit != 'true'
        run: |
          ./install_deps.sh

      - name: Unit Tests
        run: |
          make unit-test

      - name: Lint
        run: |
          make .check-lint
