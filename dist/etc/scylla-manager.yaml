# Scylla Manager config YAML

# Bind REST API to the specified TCP address using HTTP protocol.
http: 127.0.0.1:8889

# Bind REST API to the specified TCP address using HTTPS protocol.
# https: 127.0.0.1:8443

# TLS certificate file to use for HTTPS.
# tls_cert_file:

# TLS key file to use for HTTPS.
# tls_key_file:

# Scylla Manager database, used to store management data.
database:
  hosts:
    - 127.0.0.1
# Database credentials.
#   user: user
#   password: password

# Database connection timeout.
#   timeout: 600ms

# Keyspace for management data, for create statement see /etc/scylla-manager/create_keyspace.cql.tpl.
#   keyspace: scylla_manager
#   replication_factor: 1

# Communication with Scylla nodes.
ssh:
  # SSH user name, user must exist on Scylla nodes.
  user: scylla-manager
  # PEM encoded SSH private key for user.
  identity_file: /var/lib/scylla-manager/scylla_manager.pem

# Repair service configuration.
repair:
  # Granularity of repair. Repair works on segments, segment is a continuous
  # token range.
  #
  # Set the maximal number of tokens in a segment (zero is no limit).
  # segment_size_limit: 0
  #
  # Set number of segments to be repaired in one Scylla command.
  # segments_per_repair: 1

  # Error tolerance.
  #
  # Set how many segments may fail to repair. Note that the manager would retry
  # to repair the failed segments. If the limit is exceeded, however, repair
  # will stop and the next repair will start from the beginning.
  # segment_error_limit: 100
  #
  # Fail-fast, set to true if you want repair to stop on first error. Unlike
  # segment_error_limit this allows for resuming the stopped repair.
  # stop_on_error: false
  #
  # Set wait time if Scylla failed to execute a repair command. Note that if
  # stop_on_error is true this has no effect.
  # error_backoff: 10s

  # Set how often to poll Scylla node for command status.
  # poll_interval: 200ms

  # Set time offset between the automated scheduler run and the scheduled
  # repairs. If scheduler runs at midnight the repairs would start at
  # midnight + this value. This gives you the opportunity to audit and modify
  # the scheduled repairs.
  # auto_schedule_delay: 2h

  # Set maximal time after which a restarted repair is forced to start from the
  # beginning.
  # max_run_age: 36h
