#!/usr/bin/env bash

SSH_LOCAL_PORT=10010
SSH_USER=scylla-manager
SSH_IDENTITY_FILE=/var/lib/scylla-manager/scylla_manager.pem
SSH_OPTS="-q -o ConnectTimeout=5 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"

CURL_OPTS="-s -f -o /dev/null"

print_usage() {
    echo "scyllamgr_ssh_test --user remote_user --identity-file identity_file host..."
    echo "  -u --user				specify SSH user name, default ${SSH_USER}"
    echo "  -i --identity-file			specify SSH identity file path, default ${SSH_IDENTITY_FILE}"
    echo "  -p --local-port			specify local port for SSH tunnel, default ${SSH_LOCAL_PORT}"
    echo "  -v --verbose				display debug info"
}

while [ $# -gt 0 ]; do
    case "$1" in
        "-u"|"--user")
            SSH_USER="$2"
            shift 2
            ;;
        "-i"|"--identity-file")
            SSH_IDENTITY_FILE="$2"
            shift 2
            ;;
        "-p"|"--local-port")
            SSH_LOCAL_PORT="$2"
            shift 2
            ;;
        "-v"|"--verbose")
            VERBOSE="-v"
            shift 1
            ;;
        "-h" | "--help")
            print_usage
            exit 0
            ;;
        *)
            break
    esac
done

fuser -s -n tcp ${SSH_LOCAL_PORT}
if [ $? == 0 ]; then
    echo "port ${SSH_LOCAL_PORT} is used"
    exit 1
fi

res=0

for host in $@; do
    (
        ssh -i ${SSH_IDENTITY_FILE} -N -f ${SSH_OPTS} ${VERBOSE} -L ${SSH_LOCAL_PORT}:localhost:10000 ${SSH_USER}@${host} && \
        curl ${CURL_OPTS} ${VERBOSE} localhost:${SSH_LOCAL_PORT}/storage_service/cluster_name && \
        echo "${host}	OK"
    )
    if [ $? != 0 ]; then
        echo "${host}	FAILED"
        res=1
    fi

    fuser -s -n tcp ${SSH_LOCAL_PORT} -k -15
done

exit ${res}
