// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// RepairProgressHostsAdditionalPropertiesShardsAdditionalProperties repair progress hosts additional properties shards additional properties
// swagger:model repairProgressHostsAdditionalPropertiesShardsAdditionalProperties

type RepairProgressHostsAdditionalPropertiesShardsAdditionalProperties struct {

	// error
	Error int32 `json:"error,omitempty"`

	// percent complete
	PercentComplete int32 `json:"percent_complete,omitempty"`

	// success
	Success int32 `json:"success,omitempty"`

	// total
	Total int32 `json:"total,omitempty"`
}

/* polymorph repairProgressHostsAdditionalPropertiesShardsAdditionalProperties error false */

/* polymorph repairProgressHostsAdditionalPropertiesShardsAdditionalProperties percent_complete false */

/* polymorph repairProgressHostsAdditionalPropertiesShardsAdditionalProperties success false */

/* polymorph repairProgressHostsAdditionalPropertiesShardsAdditionalProperties total false */

// Validate validates this repair progress hosts additional properties shards additional properties
func (m *RepairProgressHostsAdditionalPropertiesShardsAdditionalProperties) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *RepairProgressHostsAdditionalPropertiesShardsAdditionalProperties) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RepairProgressHostsAdditionalPropertiesShardsAdditionalProperties) UnmarshalBinary(b []byte) error {
	var res RepairProgressHostsAdditionalPropertiesShardsAdditionalProperties
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
