// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/scylladb/mermaid/restapi/client/models"
)

// GetClusterClusterIDRepairConfigConfigTypeExternalIDReader is a Reader for the GetClusterClusterIDRepairConfigConfigTypeExternalID structure.
type GetClusterClusterIDRepairConfigConfigTypeExternalIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterClusterIDRepairConfigConfigTypeExternalIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClusterClusterIDRepairConfigConfigTypeExternalIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetClusterClusterIDRepairConfigConfigTypeExternalIDOK creates a GetClusterClusterIDRepairConfigConfigTypeExternalIDOK with default headers values
func NewGetClusterClusterIDRepairConfigConfigTypeExternalIDOK() *GetClusterClusterIDRepairConfigConfigTypeExternalIDOK {
	return &GetClusterClusterIDRepairConfigConfigTypeExternalIDOK{}
}

/*GetClusterClusterIDRepairConfigConfigTypeExternalIDOK handles this case with default header values.

cluster config fields
*/
type GetClusterClusterIDRepairConfigConfigTypeExternalIDOK struct {
	Payload *models.RepairConfig
}

func (o *GetClusterClusterIDRepairConfigConfigTypeExternalIDOK) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/repair/config/{config_type}/{external_id}][%d] getClusterClusterIdRepairConfigConfigTypeExternalIdOK  %+v", 200, o.Payload)
}

func (o *GetClusterClusterIDRepairConfigConfigTypeExternalIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RepairConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound creates a GetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound with default headers values
func NewGetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound() *GetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound {
	return &GetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound{}
}

/*GetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound handles this case with default header values.

not found
*/
type GetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound struct {
}

func (o *GetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/repair/config/{config_type}/{external_id}][%d] getClusterClusterIdRepairConfigConfigTypeExternalIdNotFound ", 404)
}

func (o *GetClusterClusterIDRepairConfigConfigTypeExternalIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
