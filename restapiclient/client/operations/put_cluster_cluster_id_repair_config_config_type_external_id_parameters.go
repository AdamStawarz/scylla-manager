// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/scylladb/mermaid/restapiclient/models"
)

// NewPutClusterClusterIDRepairConfigConfigTypeExternalIDParams creates a new PutClusterClusterIDRepairConfigConfigTypeExternalIDParams object
// with the default values initialized.
func NewPutClusterClusterIDRepairConfigConfigTypeExternalIDParams() *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	var ()
	return &PutClusterClusterIDRepairConfigConfigTypeExternalIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutClusterClusterIDRepairConfigConfigTypeExternalIDParamsWithTimeout creates a new PutClusterClusterIDRepairConfigConfigTypeExternalIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutClusterClusterIDRepairConfigConfigTypeExternalIDParamsWithTimeout(timeout time.Duration) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	var ()
	return &PutClusterClusterIDRepairConfigConfigTypeExternalIDParams{

		timeout: timeout,
	}
}

// NewPutClusterClusterIDRepairConfigConfigTypeExternalIDParamsWithContext creates a new PutClusterClusterIDRepairConfigConfigTypeExternalIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutClusterClusterIDRepairConfigConfigTypeExternalIDParamsWithContext(ctx context.Context) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	var ()
	return &PutClusterClusterIDRepairConfigConfigTypeExternalIDParams{

		Context: ctx,
	}
}

// NewPutClusterClusterIDRepairConfigConfigTypeExternalIDParamsWithHTTPClient creates a new PutClusterClusterIDRepairConfigConfigTypeExternalIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutClusterClusterIDRepairConfigConfigTypeExternalIDParamsWithHTTPClient(client *http.Client) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	var ()
	return &PutClusterClusterIDRepairConfigConfigTypeExternalIDParams{
		HTTPClient: client,
	}
}

/*PutClusterClusterIDRepairConfigConfigTypeExternalIDParams contains all the parameters to send to the API endpoint
for the put cluster cluster ID repair config config type external ID operation typically these are written to a http.Request
*/
type PutClusterClusterIDRepairConfigConfigTypeExternalIDParams struct {

	/*ClusterID
	  cluster ID this API is performing on

	*/
	ClusterID string
	/*Conf
	  config files

	*/
	Conf *models.RepairConfig
	/*ConfigType
	  unit/keyspace

	*/
	ConfigType string
	/*ExternalID
	  id of the entity being configured

	*/
	ExternalID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) WithTimeout(timeout time.Duration) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) WithContext(ctx context.Context) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) WithHTTPClient(client *http.Client) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) WithClusterID(clusterID string) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithConf adds the conf to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) WithConf(conf *models.RepairConfig) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	o.SetConf(conf)
	return o
}

// SetConf adds the conf to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) SetConf(conf *models.RepairConfig) {
	o.Conf = conf
}

// WithConfigType adds the configType to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) WithConfigType(configType string) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	o.SetConfigType(configType)
	return o
}

// SetConfigType adds the configType to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) SetConfigType(configType string) {
	o.ConfigType = configType
}

// WithExternalID adds the externalID to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) WithExternalID(externalID string) *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams {
	o.SetExternalID(externalID)
	return o
}

// SetExternalID adds the externalId to the put cluster cluster ID repair config config type external ID params
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) SetExternalID(externalID string) {
	o.ExternalID = externalID
}

// WriteToRequest writes these params to a swagger request
func (o *PutClusterClusterIDRepairConfigConfigTypeExternalIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cluster_id
	if err := r.SetPathParam("cluster_id", o.ClusterID); err != nil {
		return err
	}

	if o.Conf == nil {
		o.Conf = new(models.RepairConfig)
	}

	if err := r.SetBodyParam(o.Conf); err != nil {
		return err
	}

	// path param config_type
	if err := r.SetPathParam("config_type", o.ConfigType); err != nil {
		return err
	}

	// path param external_id
	if err := r.SetPathParam("external_id", o.ExternalID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
