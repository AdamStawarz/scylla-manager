// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/scylladb/scylla-manager/pkg/managerclient/internal/models"
)

// GetClusterClusterIDTasksBackupTargetReader is a Reader for the GetClusterClusterIDTasksBackupTarget structure.
type GetClusterClusterIDTasksBackupTargetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterClusterIDTasksBackupTargetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterClusterIDTasksBackupTargetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClusterClusterIDTasksBackupTargetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterClusterIDTasksBackupTargetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetClusterClusterIDTasksBackupTargetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetClusterClusterIDTasksBackupTargetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClusterClusterIDTasksBackupTargetOK creates a GetClusterClusterIDTasksBackupTargetOK with default headers values
func NewGetClusterClusterIDTasksBackupTargetOK() *GetClusterClusterIDTasksBackupTargetOK {
	return &GetClusterClusterIDTasksBackupTargetOK{}
}

/*GetClusterClusterIDTasksBackupTargetOK handles this case with default header values.

Backup target
*/
type GetClusterClusterIDTasksBackupTargetOK struct {
	Payload *models.BackupTarget
}

func (o *GetClusterClusterIDTasksBackupTargetOK) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/tasks/backup/target][%d] getClusterClusterIdTasksBackupTargetOK  %+v", 200, o.Payload)
}

func (o *GetClusterClusterIDTasksBackupTargetOK) GetPayload() *models.BackupTarget {
	return o.Payload
}

func (o *GetClusterClusterIDTasksBackupTargetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackupTarget)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterClusterIDTasksBackupTargetBadRequest creates a GetClusterClusterIDTasksBackupTargetBadRequest with default headers values
func NewGetClusterClusterIDTasksBackupTargetBadRequest() *GetClusterClusterIDTasksBackupTargetBadRequest {
	return &GetClusterClusterIDTasksBackupTargetBadRequest{}
}

/*GetClusterClusterIDTasksBackupTargetBadRequest handles this case with default header values.

Bad Request
*/
type GetClusterClusterIDTasksBackupTargetBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetClusterClusterIDTasksBackupTargetBadRequest) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/tasks/backup/target][%d] getClusterClusterIdTasksBackupTargetBadRequest  %+v", 400, o.Payload)
}

func (o *GetClusterClusterIDTasksBackupTargetBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClusterClusterIDTasksBackupTargetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterClusterIDTasksBackupTargetNotFound creates a GetClusterClusterIDTasksBackupTargetNotFound with default headers values
func NewGetClusterClusterIDTasksBackupTargetNotFound() *GetClusterClusterIDTasksBackupTargetNotFound {
	return &GetClusterClusterIDTasksBackupTargetNotFound{}
}

/*GetClusterClusterIDTasksBackupTargetNotFound handles this case with default header values.

Not found
*/
type GetClusterClusterIDTasksBackupTargetNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetClusterClusterIDTasksBackupTargetNotFound) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/tasks/backup/target][%d] getClusterClusterIdTasksBackupTargetNotFound  %+v", 404, o.Payload)
}

func (o *GetClusterClusterIDTasksBackupTargetNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClusterClusterIDTasksBackupTargetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterClusterIDTasksBackupTargetInternalServerError creates a GetClusterClusterIDTasksBackupTargetInternalServerError with default headers values
func NewGetClusterClusterIDTasksBackupTargetInternalServerError() *GetClusterClusterIDTasksBackupTargetInternalServerError {
	return &GetClusterClusterIDTasksBackupTargetInternalServerError{}
}

/*GetClusterClusterIDTasksBackupTargetInternalServerError handles this case with default header values.

Server error
*/
type GetClusterClusterIDTasksBackupTargetInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetClusterClusterIDTasksBackupTargetInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/tasks/backup/target][%d] getClusterClusterIdTasksBackupTargetInternalServerError  %+v", 500, o.Payload)
}

func (o *GetClusterClusterIDTasksBackupTargetInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClusterClusterIDTasksBackupTargetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterClusterIDTasksBackupTargetDefault creates a GetClusterClusterIDTasksBackupTargetDefault with default headers values
func NewGetClusterClusterIDTasksBackupTargetDefault(code int) *GetClusterClusterIDTasksBackupTargetDefault {
	return &GetClusterClusterIDTasksBackupTargetDefault{
		_statusCode: code,
	}
}

/*GetClusterClusterIDTasksBackupTargetDefault handles this case with default header values.

Unexpected error
*/
type GetClusterClusterIDTasksBackupTargetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get cluster cluster ID tasks backup target default response
func (o *GetClusterClusterIDTasksBackupTargetDefault) Code() int {
	return o._statusCode
}

func (o *GetClusterClusterIDTasksBackupTargetDefault) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/tasks/backup/target][%d] GetClusterClusterIDTasksBackupTarget default  %+v", o._statusCode, o.Payload)
}

func (o *GetClusterClusterIDTasksBackupTargetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClusterClusterIDTasksBackupTargetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
