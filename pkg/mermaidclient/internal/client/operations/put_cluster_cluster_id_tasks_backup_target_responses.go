// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/scylladb/mermaid/pkg/mermaidclient/internal/models"
)

// PutClusterClusterIDTasksBackupTargetReader is a Reader for the PutClusterClusterIDTasksBackupTarget structure.
type PutClusterClusterIDTasksBackupTargetReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutClusterClusterIDTasksBackupTargetReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutClusterClusterIDTasksBackupTargetOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPutClusterClusterIDTasksBackupTargetBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutClusterClusterIDTasksBackupTargetNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutClusterClusterIDTasksBackupTargetInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPutClusterClusterIDTasksBackupTargetDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPutClusterClusterIDTasksBackupTargetOK creates a PutClusterClusterIDTasksBackupTargetOK with default headers values
func NewPutClusterClusterIDTasksBackupTargetOK() *PutClusterClusterIDTasksBackupTargetOK {
	return &PutClusterClusterIDTasksBackupTargetOK{}
}

/*PutClusterClusterIDTasksBackupTargetOK handles this case with default header values.

Backup target
*/
type PutClusterClusterIDTasksBackupTargetOK struct {
	Payload *models.BackupTarget
}

func (o *PutClusterClusterIDTasksBackupTargetOK) Error() string {
	return fmt.Sprintf("[PUT /cluster/{cluster_id}/tasks/backup/target][%d] putClusterClusterIdTasksBackupTargetOK  %+v", 200, o.Payload)
}

func (o *PutClusterClusterIDTasksBackupTargetOK) GetPayload() *models.BackupTarget {
	return o.Payload
}

func (o *PutClusterClusterIDTasksBackupTargetOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BackupTarget)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutClusterClusterIDTasksBackupTargetBadRequest creates a PutClusterClusterIDTasksBackupTargetBadRequest with default headers values
func NewPutClusterClusterIDTasksBackupTargetBadRequest() *PutClusterClusterIDTasksBackupTargetBadRequest {
	return &PutClusterClusterIDTasksBackupTargetBadRequest{}
}

/*PutClusterClusterIDTasksBackupTargetBadRequest handles this case with default header values.

Bad Request
*/
type PutClusterClusterIDTasksBackupTargetBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PutClusterClusterIDTasksBackupTargetBadRequest) Error() string {
	return fmt.Sprintf("[PUT /cluster/{cluster_id}/tasks/backup/target][%d] putClusterClusterIdTasksBackupTargetBadRequest  %+v", 400, o.Payload)
}

func (o *PutClusterClusterIDTasksBackupTargetBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PutClusterClusterIDTasksBackupTargetBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutClusterClusterIDTasksBackupTargetNotFound creates a PutClusterClusterIDTasksBackupTargetNotFound with default headers values
func NewPutClusterClusterIDTasksBackupTargetNotFound() *PutClusterClusterIDTasksBackupTargetNotFound {
	return &PutClusterClusterIDTasksBackupTargetNotFound{}
}

/*PutClusterClusterIDTasksBackupTargetNotFound handles this case with default header values.

Not found
*/
type PutClusterClusterIDTasksBackupTargetNotFound struct {
	Payload *models.ErrorResponse
}

func (o *PutClusterClusterIDTasksBackupTargetNotFound) Error() string {
	return fmt.Sprintf("[PUT /cluster/{cluster_id}/tasks/backup/target][%d] putClusterClusterIdTasksBackupTargetNotFound  %+v", 404, o.Payload)
}

func (o *PutClusterClusterIDTasksBackupTargetNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PutClusterClusterIDTasksBackupTargetNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutClusterClusterIDTasksBackupTargetInternalServerError creates a PutClusterClusterIDTasksBackupTargetInternalServerError with default headers values
func NewPutClusterClusterIDTasksBackupTargetInternalServerError() *PutClusterClusterIDTasksBackupTargetInternalServerError {
	return &PutClusterClusterIDTasksBackupTargetInternalServerError{}
}

/*PutClusterClusterIDTasksBackupTargetInternalServerError handles this case with default header values.

Server error
*/
type PutClusterClusterIDTasksBackupTargetInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PutClusterClusterIDTasksBackupTargetInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /cluster/{cluster_id}/tasks/backup/target][%d] putClusterClusterIdTasksBackupTargetInternalServerError  %+v", 500, o.Payload)
}

func (o *PutClusterClusterIDTasksBackupTargetInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PutClusterClusterIDTasksBackupTargetInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutClusterClusterIDTasksBackupTargetDefault creates a PutClusterClusterIDTasksBackupTargetDefault with default headers values
func NewPutClusterClusterIDTasksBackupTargetDefault(code int) *PutClusterClusterIDTasksBackupTargetDefault {
	return &PutClusterClusterIDTasksBackupTargetDefault{
		_statusCode: code,
	}
}

/*PutClusterClusterIDTasksBackupTargetDefault handles this case with default header values.

Unexpected error
*/
type PutClusterClusterIDTasksBackupTargetDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the put cluster cluster ID tasks backup target default response
func (o *PutClusterClusterIDTasksBackupTargetDefault) Code() int {
	return o._statusCode
}

func (o *PutClusterClusterIDTasksBackupTargetDefault) Error() string {
	return fmt.Sprintf("[PUT /cluster/{cluster_id}/tasks/backup/target][%d] PutClusterClusterIDTasksBackupTarget default  %+v", o._statusCode, o.Payload)
}

func (o *PutClusterClusterIDTasksBackupTargetDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PutClusterClusterIDTasksBackupTargetDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
