// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/scylladb/mermaid/pkg/mermaidclient/internal/models"
)

// GetClustersReader is a Reader for the GetClusters structure.
type GetClustersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClustersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClustersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClustersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClustersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetClustersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetClustersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetClustersOK creates a GetClustersOK with default headers values
func NewGetClustersOK() *GetClustersOK {
	return &GetClustersOK{}
}

/*GetClustersOK handles this case with default header values.

List of all clusters
*/
type GetClustersOK struct {
	Payload []*models.Cluster
}

func (o *GetClustersOK) Error() string {
	return fmt.Sprintf("[GET /clusters][%d] getClustersOK  %+v", 200, o.Payload)
}

func (o *GetClustersOK) GetPayload() []*models.Cluster {
	return o.Payload
}

func (o *GetClustersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersBadRequest creates a GetClustersBadRequest with default headers values
func NewGetClustersBadRequest() *GetClustersBadRequest {
	return &GetClustersBadRequest{}
}

/*GetClustersBadRequest handles this case with default header values.

Bad Request
*/
type GetClustersBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetClustersBadRequest) Error() string {
	return fmt.Sprintf("[GET /clusters][%d] getClustersBadRequest  %+v", 400, o.Payload)
}

func (o *GetClustersBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClustersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersNotFound creates a GetClustersNotFound with default headers values
func NewGetClustersNotFound() *GetClustersNotFound {
	return &GetClustersNotFound{}
}

/*GetClustersNotFound handles this case with default header values.

Not found
*/
type GetClustersNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetClustersNotFound) Error() string {
	return fmt.Sprintf("[GET /clusters][%d] getClustersNotFound  %+v", 404, o.Payload)
}

func (o *GetClustersNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClustersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersInternalServerError creates a GetClustersInternalServerError with default headers values
func NewGetClustersInternalServerError() *GetClustersInternalServerError {
	return &GetClustersInternalServerError{}
}

/*GetClustersInternalServerError handles this case with default header values.

Server error
*/
type GetClustersInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetClustersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /clusters][%d] getClustersInternalServerError  %+v", 500, o.Payload)
}

func (o *GetClustersInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClustersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersDefault creates a GetClustersDefault with default headers values
func NewGetClustersDefault(code int) *GetClustersDefault {
	return &GetClustersDefault{
		_statusCode: code,
	}
}

/*GetClustersDefault handles this case with default header values.

Unexpected error
*/
type GetClustersDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the get clusters default response
func (o *GetClustersDefault) Code() int {
	return o._statusCode
}

func (o *GetClustersDefault) Error() string {
	return fmt.Sprintf("[GET /clusters][%d] GetClusters default  %+v", o._statusCode, o.Payload)
}

func (o *GetClustersDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetClustersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
