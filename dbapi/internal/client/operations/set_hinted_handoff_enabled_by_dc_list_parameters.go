// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSetHintedHandoffEnabledByDcListParams creates a new SetHintedHandoffEnabledByDcListParams object
// with the default values initialized.
func NewSetHintedHandoffEnabledByDcListParams() *SetHintedHandoffEnabledByDcListParams {
	var ()
	return &SetHintedHandoffEnabledByDcListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSetHintedHandoffEnabledByDcListParamsWithTimeout creates a new SetHintedHandoffEnabledByDcListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSetHintedHandoffEnabledByDcListParamsWithTimeout(timeout time.Duration) *SetHintedHandoffEnabledByDcListParams {
	var ()
	return &SetHintedHandoffEnabledByDcListParams{

		timeout: timeout,
	}
}

// NewSetHintedHandoffEnabledByDcListParamsWithContext creates a new SetHintedHandoffEnabledByDcListParams object
// with the default values initialized, and the ability to set a context for a request
func NewSetHintedHandoffEnabledByDcListParamsWithContext(ctx context.Context) *SetHintedHandoffEnabledByDcListParams {
	var ()
	return &SetHintedHandoffEnabledByDcListParams{

		Context: ctx,
	}
}

// NewSetHintedHandoffEnabledByDcListParamsWithHTTPClient creates a new SetHintedHandoffEnabledByDcListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSetHintedHandoffEnabledByDcListParamsWithHTTPClient(client *http.Client) *SetHintedHandoffEnabledByDcListParams {
	var ()
	return &SetHintedHandoffEnabledByDcListParams{
		HTTPClient: client,
	}
}

/*SetHintedHandoffEnabledByDcListParams contains all the parameters to send to the API endpoint
for the set hinted handoff enabled by dc list operation typically these are written to a http.Request
*/
type SetHintedHandoffEnabledByDcListParams struct {

	/*Dcs
	  The dcs to enable in the CSV format

	*/
	Dcs string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the set hinted handoff enabled by dc list params
func (o *SetHintedHandoffEnabledByDcListParams) WithTimeout(timeout time.Duration) *SetHintedHandoffEnabledByDcListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set hinted handoff enabled by dc list params
func (o *SetHintedHandoffEnabledByDcListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set hinted handoff enabled by dc list params
func (o *SetHintedHandoffEnabledByDcListParams) WithContext(ctx context.Context) *SetHintedHandoffEnabledByDcListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set hinted handoff enabled by dc list params
func (o *SetHintedHandoffEnabledByDcListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set hinted handoff enabled by dc list params
func (o *SetHintedHandoffEnabledByDcListParams) WithHTTPClient(client *http.Client) *SetHintedHandoffEnabledByDcListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set hinted handoff enabled by dc list params
func (o *SetHintedHandoffEnabledByDcListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDcs adds the dcs to the set hinted handoff enabled by dc list params
func (o *SetHintedHandoffEnabledByDcListParams) WithDcs(dcs string) *SetHintedHandoffEnabledByDcListParams {
	o.SetDcs(dcs)
	return o
}

// SetDcs adds the dcs to the set hinted handoff enabled by dc list params
func (o *SetHintedHandoffEnabledByDcListParams) SetDcs(dcs string) {
	o.Dcs = dcs
}

// WriteToRequest writes these params to a swagger request
func (o *SetHintedHandoffEnabledByDcListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param dcs
	qrDcs := o.Dcs
	qDcs := qrDcs
	if qDcs != "" {
		if err := r.SetQueryParam("dcs", qDcs); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
