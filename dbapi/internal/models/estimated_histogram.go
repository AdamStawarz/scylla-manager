// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// EstimatedHistogram estimated_histogram
//
// An estimated histogram values
// swagger:model EstimatedHistogram
type EstimatedHistogram struct {

	// The series of values to which the counts in `buckets` correspond
	BucketOffsets []int64 `json:"bucket_offsets"`

	// The histogram buckets
	Buckets []int64 `json:"buckets"`
}

// Validate validates this estimated histogram
func (m *EstimatedHistogram) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBucketOffsets(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateBuckets(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *EstimatedHistogram) validateBucketOffsets(formats strfmt.Registry) error {

	if swag.IsZero(m.BucketOffsets) { // not required
		return nil
	}

	return nil
}

func (m *EstimatedHistogram) validateBuckets(formats strfmt.Registry) error {

	if swag.IsZero(m.Buckets) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *EstimatedHistogram) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *EstimatedHistogram) UnmarshalBinary(b []byte) error {
	var res EstimatedHistogram
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
