// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewMoveParams creates a new MoveParams object
// with the default values initialized.
func NewMoveParams() *MoveParams {
	var ()
	return &MoveParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewMoveParamsWithTimeout creates a new MoveParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewMoveParamsWithTimeout(timeout time.Duration) *MoveParams {
	var ()
	return &MoveParams{

		timeout: timeout,
	}
}

// NewMoveParamsWithContext creates a new MoveParams object
// with the default values initialized, and the ability to set a context for a request
func NewMoveParamsWithContext(ctx context.Context) *MoveParams {
	var ()
	return &MoveParams{

		Context: ctx,
	}
}

// NewMoveParamsWithHTTPClient creates a new MoveParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewMoveParamsWithHTTPClient(client *http.Client) *MoveParams {
	var ()
	return &MoveParams{
		HTTPClient: client,
	}
}

/*MoveParams contains all the parameters to send to the API endpoint
for the move operation typically these are written to a http.Request
*/
type MoveParams struct {

	/*NewToken
	  token to move this node to

	*/
	NewToken string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the move params
func (o *MoveParams) WithTimeout(timeout time.Duration) *MoveParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the move params
func (o *MoveParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the move params
func (o *MoveParams) WithContext(ctx context.Context) *MoveParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the move params
func (o *MoveParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the move params
func (o *MoveParams) WithHTTPClient(client *http.Client) *MoveParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the move params
func (o *MoveParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithNewToken adds the newToken to the move params
func (o *MoveParams) WithNewToken(newToken string) *MoveParams {
	o.SetNewToken(newToken)
	return o
}

// SetNewToken adds the newToken to the move params
func (o *MoveParams) SetNewToken(newToken string) {
	o.NewToken = newToken
}

// WriteToRequest writes these params to a swagger request
func (o *MoveParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param new_token
	qrNewToken := o.NewToken
	qNewToken := qrNewToken
	if qNewToken != "" {
		if err := r.SetQueryParam("new_token", qNewToken); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
