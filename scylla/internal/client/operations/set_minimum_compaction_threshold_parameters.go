// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSetMinimumCompactionThresholdParams creates a new SetMinimumCompactionThresholdParams object
// with the default values initialized.
func NewSetMinimumCompactionThresholdParams() *SetMinimumCompactionThresholdParams {
	var ()
	return &SetMinimumCompactionThresholdParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewSetMinimumCompactionThresholdParamsWithTimeout creates a new SetMinimumCompactionThresholdParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewSetMinimumCompactionThresholdParamsWithTimeout(timeout time.Duration) *SetMinimumCompactionThresholdParams {
	var ()
	return &SetMinimumCompactionThresholdParams{

		timeout: timeout,
	}
}

// NewSetMinimumCompactionThresholdParamsWithContext creates a new SetMinimumCompactionThresholdParams object
// with the default values initialized, and the ability to set a context for a request
func NewSetMinimumCompactionThresholdParamsWithContext(ctx context.Context) *SetMinimumCompactionThresholdParams {
	var ()
	return &SetMinimumCompactionThresholdParams{

		Context: ctx,
	}
}

// NewSetMinimumCompactionThresholdParamsWithHTTPClient creates a new SetMinimumCompactionThresholdParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewSetMinimumCompactionThresholdParamsWithHTTPClient(client *http.Client) *SetMinimumCompactionThresholdParams {
	var ()
	return &SetMinimumCompactionThresholdParams{
		HTTPClient: client,
	}
}

/*SetMinimumCompactionThresholdParams contains all the parameters to send to the API endpoint
for the set minimum compaction threshold operation typically these are written to a http.Request
*/
type SetMinimumCompactionThresholdParams struct {

	/*Name
	  The column family name in keyspace:name format

	*/
	Name string
	/*Value
	  The minimum number of sstables in queue before compaction kicks off

	*/
	Value int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) WithTimeout(timeout time.Duration) *SetMinimumCompactionThresholdParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) WithContext(ctx context.Context) *SetMinimumCompactionThresholdParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) WithHTTPClient(client *http.Client) *SetMinimumCompactionThresholdParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) WithName(name string) *SetMinimumCompactionThresholdParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) SetName(name string) {
	o.Name = name
}

// WithValue adds the value to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) WithValue(value int32) *SetMinimumCompactionThresholdParams {
	o.SetValue(value)
	return o
}

// SetValue adds the value to the set minimum compaction threshold params
func (o *SetMinimumCompactionThresholdParams) SetValue(value int32) {
	o.Value = value
}

// WriteToRequest writes these params to a swagger request
func (o *SetMinimumCompactionThresholdParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	// query param value
	qrValue := o.Value
	qValue := swag.FormatInt32(qrValue)
	if qValue != "" {
		if err := r.SetQueryParam("value", qValue); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
