// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Histogram histogram
//
// A histogram values
// swagger:model Histogram

type Histogram struct {

	// Total count so far
	Count int64 `json:"count,omitempty"`

	// The max so far
	Max int64 `json:"max,omitempty"`

	// The mean
	Mean int32 `json:"mean,omitempty"`

	// The min so far
	Min int64 `json:"min,omitempty"`

	// A sample containing the last n elements
	Sample []int64 `json:"sample"`

	// Total sum so far
	Sum int64 `json:"sum,omitempty"`

	// The variance
	Variance int32 `json:"variance,omitempty"`
}

/* polymorph Histogram count false */

/* polymorph Histogram max false */

/* polymorph Histogram mean false */

/* polymorph Histogram min false */

/* polymorph Histogram sample false */

/* polymorph Histogram sum false */

/* polymorph Histogram variance false */

// Validate validates this histogram
func (m *Histogram) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSample(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Histogram) validateSample(formats strfmt.Registry) error {

	if swag.IsZero(m.Sample) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Histogram) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Histogram) UnmarshalBinary(b []byte) error {
	var res Histogram
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
