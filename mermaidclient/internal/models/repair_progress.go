// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// RepairProgress repair progress
// swagger:model repairProgress
type RepairProgress struct {

	// cause
	Cause string `json:"cause,omitempty"`

	// error
	Error int32 `json:"error,omitempty"`

	// hosts
	Hosts RepairProgressHosts `json:"hosts,omitempty"`

	// keyspace
	Keyspace string `json:"keyspace,omitempty"`

	// percent complete
	PercentComplete int32 `json:"percent_complete,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// success
	Success int32 `json:"success,omitempty"`

	// tables
	Tables []string `json:"tables"`

	// total
	Total int32 `json:"total,omitempty"`
}

// Validate validates this repair progress
func (m *RepairProgress) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTables(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RepairProgress) validateTables(formats strfmt.Registry) error {

	if swag.IsZero(m.Tables) { // not required
		return nil
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RepairProgress) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RepairProgress) UnmarshalBinary(b []byte) error {
	var res RepairProgress
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
