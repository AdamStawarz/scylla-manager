// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutClusterClusterIDRepairUnitUnitIDStopParams creates a new PutClusterClusterIDRepairUnitUnitIDStopParams object
// with the default values initialized.
func NewPutClusterClusterIDRepairUnitUnitIDStopParams() *PutClusterClusterIDRepairUnitUnitIDStopParams {
	var ()
	return &PutClusterClusterIDRepairUnitUnitIDStopParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutClusterClusterIDRepairUnitUnitIDStopParamsWithTimeout creates a new PutClusterClusterIDRepairUnitUnitIDStopParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutClusterClusterIDRepairUnitUnitIDStopParamsWithTimeout(timeout time.Duration) *PutClusterClusterIDRepairUnitUnitIDStopParams {
	var ()
	return &PutClusterClusterIDRepairUnitUnitIDStopParams{

		timeout: timeout,
	}
}

// NewPutClusterClusterIDRepairUnitUnitIDStopParamsWithContext creates a new PutClusterClusterIDRepairUnitUnitIDStopParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutClusterClusterIDRepairUnitUnitIDStopParamsWithContext(ctx context.Context) *PutClusterClusterIDRepairUnitUnitIDStopParams {
	var ()
	return &PutClusterClusterIDRepairUnitUnitIDStopParams{

		Context: ctx,
	}
}

// NewPutClusterClusterIDRepairUnitUnitIDStopParamsWithHTTPClient creates a new PutClusterClusterIDRepairUnitUnitIDStopParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutClusterClusterIDRepairUnitUnitIDStopParamsWithHTTPClient(client *http.Client) *PutClusterClusterIDRepairUnitUnitIDStopParams {
	var ()
	return &PutClusterClusterIDRepairUnitUnitIDStopParams{
		HTTPClient: client,
	}
}

/*PutClusterClusterIDRepairUnitUnitIDStopParams contains all the parameters to send to the API endpoint
for the put cluster cluster ID repair unit unit ID stop operation typically these are written to a http.Request
*/
type PutClusterClusterIDRepairUnitUnitIDStopParams struct {

	/*ClusterID
	  cluster ID this API is performing on

	*/
	ClusterID string
	/*UnitID
	  target unit UUID

	*/
	UnitID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) WithTimeout(timeout time.Duration) *PutClusterClusterIDRepairUnitUnitIDStopParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) WithContext(ctx context.Context) *PutClusterClusterIDRepairUnitUnitIDStopParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) WithHTTPClient(client *http.Client) *PutClusterClusterIDRepairUnitUnitIDStopParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) WithClusterID(clusterID string) *PutClusterClusterIDRepairUnitUnitIDStopParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithUnitID adds the unitID to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) WithUnitID(unitID string) *PutClusterClusterIDRepairUnitUnitIDStopParams {
	o.SetUnitID(unitID)
	return o
}

// SetUnitID adds the unitId to the put cluster cluster ID repair unit unit ID stop params
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) SetUnitID(unitID string) {
	o.UnitID = unitID
}

// WriteToRequest writes these params to a swagger request
func (o *PutClusterClusterIDRepairUnitUnitIDStopParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cluster_id
	if err := r.SetPathParam("cluster_id", o.ClusterID); err != nil {
		return err
	}

	// path param unit_id
	if err := r.SetPathParam("unit_id", o.UnitID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
