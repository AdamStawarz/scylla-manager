// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/scylladb/mermaid/mermaidclient/internal/models"
)

// GetClusterClusterIDRepairUnitUnitIDProgressReader is a Reader for the GetClusterClusterIDRepairUnitUnitIDProgress structure.
type GetClusterClusterIDRepairUnitUnitIDProgressReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterClusterIDRepairUnitUnitIDProgressReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetClusterClusterIDRepairUnitUnitIDProgressOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		body := response.Body()
		defer body.Close()

		var m json.RawMessage
		if err := json.NewDecoder(body).Decode(&m); err != nil {
			return nil, err
		}

		return nil, runtime.NewAPIError("API error", m, response.Code())
	}
}

// NewGetClusterClusterIDRepairUnitUnitIDProgressOK creates a GetClusterClusterIDRepairUnitUnitIDProgressOK with default headers values
func NewGetClusterClusterIDRepairUnitUnitIDProgressOK() *GetClusterClusterIDRepairUnitUnitIDProgressOK {
	return &GetClusterClusterIDRepairUnitUnitIDProgressOK{}
}

/*GetClusterClusterIDRepairUnitUnitIDProgressOK handles this case with default header values.

percentage of run completed in total and details
*/
type GetClusterClusterIDRepairUnitUnitIDProgressOK struct {
	Payload *models.RepairProgress
}

func (o *GetClusterClusterIDRepairUnitUnitIDProgressOK) Error() string {
	return fmt.Sprintf("[GET /cluster/{cluster_id}/repair/unit/{unit_id}/progress][%d] getClusterClusterIdRepairUnitUnitIdProgressOK  %+v", 200, o.Payload)
}

func (o *GetClusterClusterIDRepairUnitUnitIDProgressOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RepairProgress)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
