{
  "swagger": "2.0",
  "info": {
    "title": "Scylla Manager API",
    "version": "0.1"
  },
  "basePath": "/api/v1",
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "definitions": {
    "version": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        }
      }
    },
    "cluster": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "shard_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "repairConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "segment_size_limit": {
          "type": "integer",
          "format": "int64"
        },
        "retry_limit": {
          "type": "integer"
        },
        "retry_backoff_seconds": {
          "type": "integer"
        },
        "parallel_shard_percent": {
          "type": "number",
          "format": "float"
        }
      }
    },
    "repairUnit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cluster_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "keyspace": {
          "type": "string"
        },
        "tables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "repairUnitUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "keyspace": {
          "type": "string"
        },
        "tables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "repairProgress": {
      "type": "object",
      "properties": {
        "keyspace": {
          "type": "string"
        },
        "tables": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "cause": {
          "type": "string"
        },
        "percent_complete": {
          "type": "number",
          "format": "int32"
        },
        "total": {
          "type": "number",
          "format": "int32"
        },
        "success": {
          "type": "number",
          "format": "int32"
        },
        "error": {
          "type": "number",
          "format": "int32"
        },
        "hosts": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "percent_complete": {
                "type": "number",
                "format": "int32"
              },
              "total": {
                "type": "number",
                "format": "int32"
              },
              "success": {
                "type": "number",
                "format": "int32"
              },
              "error": {
                "type": "number",
                "format": "int32"
              },
              "shards": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "percent_complete": {
                      "type": "number",
                      "format": "int32"
                    },
                    "total": {
                      "type": "number",
                      "format": "int32"
                    },
                    "success": {
                      "type": "number",
                      "format": "int32"
                    },
                    "error": {
                      "type": "number",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "schedule": {
      "type": "object",
      "properties": {
        "start_date": {
          "type": "string"
        },
        "interval_days": {
          "type": "number",
          "format": "int32"
        },
        "num_retries": {
          "type": "number",
          "format": "int32"
        }
      }
    },
    "task": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "schedule": {
          "$ref": "#/definitions/schedule"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "extendedTask": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "schedule": {
          "$ref": "#/definitions/schedule"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "cause": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        }
      }
    },
    "taskUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "schedule": {
          "$ref": "#/definitions/schedule"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "taskRun": {
      "type": "object",
      "properties": {
        "cluster_id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "task_id": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "cause": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "end_time": {
          "type": "string"
        }
      }
    }
  },
  "paths": {
    "/version": {
      "get": {
        "description": "returns the server version",
        "responses": {
          "200": {
            "description": "Server version",
            "schema": {
              "$ref": "#/definitions/version"
            }
          }
        }
      }
    },
    "/clusters": {
      "get": {
        "description": "listClusters Description",
        "responses": {
          "200": {
            "description": "list of all the clusters",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/cluster"
              }
            }
          }
        }
      },
      "post": {
        "description": "createCluster Description",
        "parameters": [
          {
            "description": "cluster JSON object with updated fields",
            "name": "cluster",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "location of the new cluster",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/cluster/{cluster_id}": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "description": "loadCluster Description",
        "responses": {
          "200": {
            "description": "requested cluster fields",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          }
        }
      },
      "put": {
        "description": "updateCluster Description",
        "parameters": [
          {
            "description": "cluster JSON object with updated fields",
            "name": "cluster",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated cluster fields",
            "schema": {
              "$ref": "#/definitions/cluster"
            }
          }
        }
      },
      "delete": {
        "description": "deleteCluster Description",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cluster/{cluster_id}/repair/config": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "description": "getConfig cluster description",
        "responses": {
          "200": {
            "description": "cluster config fields",
            "schema": {
              "$ref": "#/definitions/repairConfig"
            }
          }
        }
      },
      "put": {
        "description": "updateConfig cluster description",
        "parameters": [
          {
            "name": "conf",
            "in": "body",
            "description": "config files",
            "schema": {
              "$ref": "#/definitions/repairConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "deleteConfig cluster description",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cluster/{cluster_id}/repair/config/{config_type}/{external_id}": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "unit/keyspace",
          "name": "config_type",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "id of the entity being configured",
          "name": "external_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "description": "getConfig cluster description",
        "responses": {
          "200": {
            "description": "cluster config fields",
            "schema": {
              "$ref": "#/definitions/repairConfig"
            }
          }
        }
      },
      "put": {
        "description": "updateConfig cluster description",
        "parameters": [
          {
            "name": "conf",
            "in": "body",
            "description": "config files",
            "schema": {
              "$ref": "#/definitions/repairConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "deleteConfig cluster description",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cluster/{cluster_id}/repair/unit/{unit_id}/progress/{run_id}": {
      "get": {
        "parameters": [
          {
            "type": "string",
            "description": "cluster ID this API is performing on",
            "name": "cluster_id",
            "in": "path",
            "required": true
          },
          {
            "description": "unit ID requesting the stats",
            "type": "string",
            "name": "unit_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "repair run ID requesting the stats",
            "name": "run_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "percentage of run completed in total and details",
            "schema": {
              "$ref": "#/definitions/repairProgress"
            }
          }
        }
      }
    },
    "/cluster/{cluster_id}/repair/unit/{unit_id}": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "target unit UUID",
          "name": "unit_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "description": "loadUnit Description",
        "responses": {
          "200": {
            "description": "requested unit fields",
            "schema": {
              "$ref": "#/definitions/repairUnit"
            }
          }
        }
      },
      "put": {
        "description": "updateUnit Description",
        "parameters": [
          {
            "description": "unit JSON object with updated fields",
            "name": "unitFields",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/repairUnitUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated unit fields",
            "schema": {
              "$ref": "#/definitions/repairUnit"
            }
          }
        }
      },
      "delete": {
        "description": "deleteUnit Description",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cluster/{cluster_id}/repair/units": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "description": "listUnits Description",
        "responses": {
          "200": {
            "description": "array of units",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/repairUnit"
              }
            }
          }
        }
      },
      "post": {
        "description": "createUnit Description",
        "parameters": [
          {
            "description": "unit JSON object with updated fields",
            "name": "unitFields",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/repairUnitUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "location of the new unit",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/cluster/{cluster_id}/tasks": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "description": "listTasks Description",
        "parameters": [
          {
            "name": "all",
            "in": "query",
            "type": "boolean",
            "description": "return disabled tasks when true",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "filter tasks by type",
            "type": "string",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "filter tasks by last run status",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "array of tasks",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/extendedTask"
              }
            }
          }
        }
      },
      "post": {
        "description": "createTask Description",
        "parameters": [
          {
            "description": "task JSON object with updated fields",
            "name": "taskFields",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/taskUpdate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "description": "location of the new task",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/cluster/{cluster_id}/task/{task_type}/{task_id}": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "task type",
          "name": "task_type",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "task ID (UUID) or name",
          "name": "task_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "description": "loadTask Description",
        "responses": {
          "200": {
            "description": "requested task fields",
            "schema": {
              "$ref": "#/definitions/task"
            }
          }
        }
      },
      "put": {
        "description": "updateTask Description",
        "parameters": [
          {
            "description": "task JSON object with updated fields",
            "name": "taskFields",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/taskUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated task fields",
            "schema": {
              "$ref": "#/definitions/task"
            }
          }
        }
      },
      "delete": {
        "description": "deleteTask Description",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cluster/{cluster_id}/task/{task_type}/{task_id}/start": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "task type",
          "name": "task_type",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "task ID (UUID) or name",
          "name": "task_id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "description": "startTask Description",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cluster/{cluster_id}/task/{task_type}/{task_id}/stop": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "task type",
          "name": "task_type",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "task ID (UUID) or name",
          "name": "task_id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "description": "stopTask Description",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/cluster/{cluster_id}/task/{task_type}/{task_id}/history": {
      "parameters": [
        {
          "type": "string",
          "description": "cluster ID this API is performing on",
          "name": "cluster_id",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "task type",
          "name": "task_type",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "description": "task ID (UUID) or name",
          "name": "task_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "limit the number of task runs returned",
            "required": false
          }
        ],
        "description": "taskHistory Description",
        "responses": {
          "200": {
            "description": "requested task run history",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/taskRun"
              }
            }
          }
        }
      }
    }
  }
}
